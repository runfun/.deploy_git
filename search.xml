<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo配置以及美化</title>
    <url>/2021/02/01/%E5%BB%BA%E7%AB%99/Hexo%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8A%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<p>Hexo站点配置<br>_config.yml</p>
<p>插件</p>
<ul>
<li><p>添加预计阅读时间功能<br><img data-src="https://github.com/theme-next/hexo-symbols-count-time" alt="hexo-symbols-count-time"></p>
</li>
<li><p>添加RSS订阅<br><img data-src="https://github.com/hexojs/hexo-generator-feed" alt="hexo-generator-feed"></p>
</li>
<li><p>添加最受欢迎文章功能<br><img data-src="https://github.com/tea3/hexo-related-popular-posts" alt="hexo-related-popular-posts"></p>
</li>
<li><p>无法显示图片<br><img data-src="https://github.com/7ym0n/hexo-asset-image" alt="hexo-asset-image"></p>
</li>
<li><p>图片浏览功能<insert><br><img data-src="https://github.com/theme-next/theme-next-fancybox3" alt="theme-next-fancybox3"></insert></p>
</li>
<li><p>懒加载<insert><br><img data-src="https://github.com/theme-next/theme-next-jquery-lazyload" alt="theme-next-jquery-lazyload"></insert></p>
</li>
<li><p>阅读进度条<insert><br><img data-src="https://github.com/theme-next/theme-next-reading-progress" alt="theme-next-reading-progress"></insert></p>
</li>
<li><p>搜索<br><img data-src="https://github.com/next-theme/hexo-generator-searchdb" alt="hexo-generator-searchdb"></p>
</li>
</ul>
<p>博主的文件目录如下<br><img src alt="文件目录"><br><a href="https://github.com/next-theme/hexo-theme-next">next主题</a><br>主题安装</p>
<pre class="line-numbers language-none"><code class="language-none">cd .\Blog\
git clone https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-theme-next themes&#x2F;next
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>


]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo部署到个人服务器</title>
    <url>/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<!-- # Hexo部署到个人服务器 -->
<h2 id="前要"><a href="#前要" class="headerlink" title="前要"></a>前要</h2><h3 id="博主环境简介"><a href="#博主环境简介" class="headerlink" title="博主环境简介"></a>博主环境简介</h3><ul>
<li>本地系统: win10系统</li>
<li>服务器: 雨云服务器</li>
<li>服务器版本: 香港宝塔二代(KVM)</li>
</ul>
<hr>
<h2 id="本地端环境准备"><a href="#本地端环境准备" class="headerlink" title="本地端环境准备"></a>本地端环境准备</h2><h3 id="1-nodejs安装"><a href="#1-nodejs安装" class="headerlink" title="1. nodejs安装"></a>1. nodejs安装</h3><h4 id="1-1-下载nodejs"><a href="#1-1-下载nodejs" class="headerlink" title="1.1 下载nodejs"></a>1.1 下载nodejs</h4><p>到<a href="https://nodejs.org/">nodejs官网</a>下载自己需要的版本，这里选择的是LTS「Long Term Support长期支持」版本</p>
<h4 id="1-2-安装nodejs"><a href="#1-2-安装nodejs" class="headerlink" title="1.2 安装nodejs"></a>1.2 安装nodejs</h4><p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/nodejs_install_01.png" alt="nodejs安装-初始界面"></p>


<p>一路next，为了方便包管理，这里把路径改到非系统盘「系统盘一般是C盘」，如果不在乎这些，可以直接使用默认路径，后续步骤可以直接省略。</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/nodejs_install_02.png" alt="nodejs安装-设置安装路径"></p>
<p>接下来一直next，直接到finish</p>
<h4 id="1-3-配置nodejs"><a href="#1-3-配置nodejs" class="headerlink" title="1.3 配置nodejs"></a>1.3 配置nodejs</h4><p>配置全局文件夹和缓存文件夹，在nodejs安装目录下创建node_global和node_cache两个文件夹。这里的node_global文件夹用于存放使用npm全局拉取下来的文件包，node_cache文件夹用于缓存</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/nodejs_config_01.png" alt="nodejs安装初始界面"></p>
<p>为了能够直接在命令行中使用nodejs 和 npm 需要设置环境变量</p>
<p>在系统变量path中添加如下路径，直接写你自己的nodejs根目录和node_global根目录即可</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/nodejs_config_03.png" alt="nodejs安装初始界面"></p>
<p>在系统变量中新建NODE_PATH变量，值设置为你自己的node_global文件夹目录，这里是D:\Software\Nodejs\node_global</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/nodejs_config_02.png" alt="nodejs安装初始界面"></p>
<p>设置完成之后，我们还需要修改npm配置文件，直接命令行键入</p>
<pre class="line-numbers language-none"><code class="language-none">npm config set prefix &quot;D:\Software\Nodejs\node_global&quot;
npm config set cache &quot;D:\Software\Nodejs\node_cache&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="2-Hexo框架"><a href="#2-Hexo框架" class="headerlink" title="2. Hexo框架"></a>2. Hexo框架</h3><h4 id="2-1-安装Hexo"><a href="#2-1-安装Hexo" class="headerlink" title="2.1 安装Hexo"></a>2.1 安装Hexo</h4><p><a href="https://hexo.io/zh-cn/">Hexo博客框架</a>的安装十分简单，直接按照官网步骤来即可</p>
<pre class="line-numbers language-none"><code class="language-none">npm install hexo-cli -g # 全局安装hexo
hexo init blog # 初始化博客文件夹，命名为blog；默认是在当前文件夹
cd blog
npm install # 安装依赖
hexo server # 启动服务，等同于 hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这样在浏览器进入<a href="http://localhost:4000/">http://localhost:4000/</a>就能够看到博客界面了，至此，博客框架就安装完了</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/hexo_install.png" alt="Hexo框架安装完成"></p>
<h4 id="2-2-博客使用和主题选择"><a href="#2-2-博客使用和主题选择" class="headerlink" title="2.2 博客使用和主题选择"></a>2.2 博客使用和主题选择</h4><p>至于博客使用和主题选择可以参考我的另外几篇博文，同时也可以在<a href="https://hexo.io/zh-cn/docs/">官方文档</a>和<a href="google.com">网络</a>上找到大量的分享。可以先专注于服务器部署，后续再进行博客的熟悉和主题美化。</p>
<hr>
<h2 id="服务器环境准备"><a href="#服务器环境准备" class="headerlink" title="服务器环境准备"></a>服务器环境准备</h2><h3 id="3-域名选择"><a href="#3-域名选择" class="headerlink" title="3. 域名选择"></a>3. 域名选择</h3><p>关于域名的选择，这就见仁见智了，网络上有大量的域名分销商，博主的域名是在“狗爹”「<a href="https://sg.godaddy.com/zh">GoDaddy</a>」上购买的</p>
<h3 id="4-服务器选择"><a href="#4-服务器选择" class="headerlink" title="4. 服务器选择"></a>4. 服务器选择</h3><p>选择服务器的时候，可是废了好大的功夫，对博主这种穷逼来说，总是希望选择一个最便宜的主机，后来挑来挑去选择的<a href="https://www.rainyun.com/">雨云</a>的easyPanel的香港虚拟主机，一个月只需要8块钱，并且年购打7折，结果发现并没有提供SSH连接，这让人好恼火哦，无奈最后升级成了宝塔面板的虚拟主机，一个月15元，还算可以吧。当然各位也可以去选择别的主机，或者选择阿里，腾讯的学生套餐，也很实惠，不过缺点就是需要备案。</p>
<p>在这里就说一下自己再雨云香港宝塔二代(KVM)虚拟主机上的配置过程吧</p>
<h3 id="5-站点解析配置"><a href="#5-站点解析配置" class="headerlink" title="5. 站点解析配置"></a>5. 站点解析配置</h3><h4 id="5-1-虚拟主机控制面板处绑定域名"><a href="#5-1-虚拟主机控制面板处绑定域名" class="headerlink" title="5.1 虚拟主机控制面板处绑定域名"></a>5.1 虚拟主机控制面板处绑定域名</h4><p>在虚拟主机控制面板处绑定你自己的域名，如果没有SSL证书可以不用勾选开启HTTPS支持，后续再说。yourdomain.xxx 和 <a href="http://www.yourdomain.xxx都要绑定,否则影响后续ssl证书申请,我的已经部署了ssl,所以是https开头的./">www.yourdomain.xxx都要绑定，否则影响后续SSL证书申请，我的已经部署了SSL，所以是https开头的。</a></p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/bt_setting_01.png" alt="虚拟主机控制面板处绑定域名"></p>
<h4 id="5-2-BT-宝塔管理面板绑定域名"><a href="#5-2-BT-宝塔管理面板绑定域名" class="headerlink" title="5.2 BT-宝塔管理面板绑定域名"></a>5.2 BT-宝塔管理面板绑定域名</h4><p>进入宝塔面板添加站点，在域名处添加自己的域名，yourdomain.xxx 和 <a href="http://www.yourdomain.xxx/">www.yourdomain.xxx</a></p>
<p>根目录直接默认就可，PHP版本处改为纯静态，提交即可，这样就会在根目录 /www/wwwroot/ 创建文件夹 yourdomain.xxx </p>
<p>后续我们的博客会直接放到这个文件夹中</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/bt_setting_02.png" alt="BT-宝塔管理面板处绑定域名"></p>
<p>至此，在服务器上域名的绑定就完成了，但是这时候还不能访问我们的网站，还需要我们在域名分销商处绑定DNS才可以。有了DNS解析，才能够让全世界各地的小伙伴访问自己的网站</p>
<h4 id="5-3-添加DNS解析"><a href="#5-3-添加DNS解析" class="headerlink" title="5.3 添加DNS解析"></a>5.3 添加DNS解析</h4><p>DNS解析设置直接到你自己的域名分销商处设置即可，我这里是GoDaddy，不管是那个分销商，设置方法都是相同的。一共有两种方案来修改DNS，分别是</p>
<ul>
<li>方案一：A+A</li>
<li>方案二：A+CANME</li>
</ul>
<p>「A指的是A解析：」</p>
<p>我用的是方案一，也就是A+A方案</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/dns_01.png" alt="DNS设置"></p>
<p>之后等待15分钟「DNS一般10-15分钟刷新一次」</p>
<p>之后访问自己的域名就能够看到默认界面，yourdomain.xxx 和 <a href="http://www.yourdomain.xxx应该是都可以/">www.yourdomain.xxx应该是都可以</a></p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/dns_02.png" alt="默认界面"></p>
<p>至此，站点的解析工作完成</p>
<h3 id="6-设置HTTPS访问"><a href="#6-设置HTTPS访问" class="headerlink" title="6. 设置HTTPS访问"></a>6. 设置HTTPS访问</h3><p>通俗的来讲，由于HTTPS把SSL「Secure Sockets Layer 安全套接字协议」作为自己的子层，因此有了SSL，才能够通过 https 访问自己的站点，否则只能够通过 http 来访问，如果没有这方面的需求，可以不用设置，但是宝塔都免费送了，不要白不要是吧「手动滑稽」</p>
<h4 id="6-1-申请SSL"><a href="#6-1-申请SSL" class="headerlink" title="6.1 申请SSL"></a>6.1 申请SSL</h4><p>保证 yourdomain.xxx 和 <a href="http://www.yourdomain.xxx都是能够访问到的,然后直接点击申请即可./">www.yourdomain.xxx都是能够访问到的，然后直接点击申请即可。</a></p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/ssl_01.png" alt="SSL申请"></p>
<h4 id="6-2-申请Let’s-Encrypt"><a href="#6-2-申请Let’s-Encrypt" class="headerlink" title="6.2 申请Let’s Encrypt"></a>6.2 申请Let’s Encrypt</h4><p>这个Let’s Encrypt就是一个公共且免费SSL的项目，在申请Let’s Encrypt之前，请确保自己服务器上 /www/wwwroot/yourdomain.xxx/ 目录下的 .well-known文件夹权限是 www 用户的，否则会因为权限问题而申请失败</p>
<h4 id="6-3-部署SSL"><a href="#6-3-部署SSL" class="headerlink" title="6.3 部署SSL"></a>6.3 部署SSL</h4><p>先在BT-宝塔面板管理上对网站进行部署设置，直接来到设置中，在SSL处选择“宝塔SSL”，点击“部署”即可，同时开启“强制HTTPS”按钮</p>
<p>之后回到虚拟主机控制面板处，来到”SSL证书中心”，上传SSL证书，直接把申请到的证书内容粘贴到对应位置即可。</p>
<p>最后，在域名管理处删除之前绑定的两个域名，重新添加，只不过这次勾选上“开启HTTPS支持”，将两个域名全部绑定之后，完成。</p>
<p>如此一来，整个网站的搭建就算是完成了。接下来就是网站博客内容了。</p>
<h2 id="网站内容建设-博客推送"><a href="#网站内容建设-博客推送" class="headerlink" title="网站内容建设-博客推送"></a>网站内容建设-博客推送</h2><p>由于Hexo本身就是静态博客，所以一般会在本地写文章，然后生成静态页面之后直接推送到服务器上。在这里就需要搭建一条本地和服务器之间的通道，用来传输我们的博客内容。这里使用git仓库+SSH的方式来搭建通道。</p>
<h3 id="7-工具准备"><a href="#7-工具准备" class="headerlink" title="7. 工具准备"></a>7. 工具准备</h3><ul>
<li>XShell</li>
<li>git</li>
</ul>
<p>这里使用Xshell6来进行ssh连接，当然也可以使用宝塔面板里提供的SSH终端</p>
<p>大名鼎鼎的 git 就不用多介绍了</p>
<h3 id="8-通道搭建-git-ssh"><a href="#8-通道搭建-git-ssh" class="headerlink" title="8. 通道搭建-[git+ssh]"></a>8. 通道搭建-[git+ssh]</h3><h4 id="8-1-SSH远程连接"><a href="#8-1-SSH远程连接" class="headerlink" title="8.1 SSH远程连接"></a>8.1 SSH远程连接</h4><p>使用XShell连接服务器，ssh用户名和密码直接在虚拟主机控制面板就能找到<br>点击新建，在弹出来的属性窗口中键入信息，”名称”随意填，”端口号”改成你自己的端口号，这在虚拟主机控制面板能够找到</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/xshell_01.png" alt="SSH连接"></p>
<p>然后点击侧栏“用户身份验证”，在“用户名”，“密码”处填入你自己的信息，这同样在虚拟主机控制面板能够找到。</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/xshell_02.png" alt="SSH连接"></p>
<p>连接成功后会进入控制台</p>
<h4 id="8-2-服务器端生成git仓库"><a href="#8-2-服务器端生成git仓库" class="headerlink" title="8.2 服务器端生成git仓库"></a>8.2 服务器端生成git仓库</h4><p>创建git用户，创建该用户是为了方面管理git仓库，使得各用户各司其职</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">useradd git  # 添加git用户
passwd git   # 输入git用户的密码
su git       # 切换到git用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>创建git仓库文件夹</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F;home&#x2F;git
mkdir repos  # 使用该文件夹作为仓库目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>配置git仓库</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd repos
git init --bare blog.git  # 初始化裸库，不作为工作环境，仅仅用于仓库管理
cd blog.git&#x2F;hooks
vim post-receive # 服务端hooks<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在post-receive文件中添加下面内容，注意“yourdomain.xxx”替换成你自己的文件夹名称</p>
<pre class="line-numbers language-none"><code class="language-none">#!&#x2F;bin&#x2F;sh
git --work-tree&#x3D;&#x2F;www&#x2F;wwwroot&#x2F;yourdomain.xxx --git-dir&#x3D;&#x2F;home&#x2F;git&#x2F;repos&#x2F;blog.git checkout -f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>修改权限，注意“yourdomain.xxx”替换成你自己的文件夹名称，权限一定要修改，否则会出大问题</p>
<pre class="line-numbers language-none"><code class="language-none">chmod +x post-receive
exit # 退出当前用户，切换到root用户
chown -R git:git &#x2F;home&#x2F;git&#x2F;repos&#x2F;blog.git
chown git:git &#x2F;www&#x2F;wwwroot&#x2F;yourdomain.xxx # 使得git用户能够推送博客内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="8-3-密钥设置"><a href="#8-3-密钥设置" class="headerlink" title="8.3 密钥设置"></a>8.3 密钥设置</h4><p>为了提高安全性，这里加了密钥，实际上也必须得加。密钥就相当于在管道两边加了把锁，只有拿着钥匙的人才能够进入管道，而钥匙是放在本地的，锁是放在服务器端的，只不过在ssh里，钥匙叫做私钥，锁叫做公钥</p>
<p>在本地生成SSH密钥，注意是在本地生成，不是服务器，在键入命令之后，连续按三次回车即可</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ssh-keygen # 生成公私密钥<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>生成的公私密钥保存在目录</p>
<p>C:\Users\你自己的用户名\.ssh</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/ssh_01.png" alt="SSH密钥位置"></p>
<p>其中的“id_rsa”是私钥，“id_rsa.pub”是公钥，直接复制公钥中的所有内容，将生成的公钥保存到服务器端</p>
<pre class="line-numbers language-none"><code class="language-none">cd &#x2F;home&#x2F;git&#x2F;.ssh
vim authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>将内容粘贴到”authorized_keys“文件中</p>
<h4 id="8-4-连接测试"><a href="#8-4-连接测试" class="headerlink" title="8.4 连接测试"></a>8.4 连接测试</h4><p>在本地测试连接，注意改成你自己虚拟主机的端口</p>
<pre class="line-numbers language-none"><code class="language-none">git clone ssh:&#x2F;&#x2F;git@cn-hk1.rvh2.rainyun.com:端口&#x2F;home&#x2F;git&#x2F;repos&#x2F;blog.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果拉取下之前创建的裸库-blog，表示连接OK</p>
<h3 id="9-推送内容"><a href="#9-推送内容" class="headerlink" title="9. 推送内容"></a>9. 推送内容</h3><h4 id="9-1-配置本地hexo文件"><a href="#9-1-配置本地hexo文件" class="headerlink" title="9.1 配置本地hexo文件"></a>9.1 配置本地hexo文件</h4><p>在博客的根目录中找到“_config.yml”</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/hexo_setting_01.png" alt="hexo配置文件"></p>
<p>在配置文件的最后，找到deploy，注意，端口改成你自己的虚拟主机端口</p>
<pre class="line-numbers language-none"><code class="language-none">deploy:
  type: git
  repo: 
    rainyun: ssh:&#x2F;&#x2F;git@cn-hk1.rvh2.rainyun.com:端口&#x2F;home&#x2F;git&#x2F;repos&#x2F;blog.git
  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="9-2-修改服务器文件"><a href="#9-2-修改服务器文件" class="headerlink" title="9.2 修改服务器文件"></a>9.2 修改服务器文件</h4><p>进入服务器端网站根目录 /www/wwwroot/yourdomain.xxx 找到index.html ，直接删除或者重命名为”index.html.old”，这是为了防止推送博客的时候将其覆盖掉。</p>
<h4 id="9-3-博客推送"><a href="#9-3-博客推送" class="headerlink" title="9.3 博客推送"></a>9.3 博客推送</h4><p>进入博客根目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">hexo clean  # 删除缓存（删除之前生成的静态文件-存放在public文件夹）
hexo g # 生成静态文件
hexo d # 推送<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>现在访问你的域名，应该就能够看到博客内容了</p>
<p><img data-src="/2021/01/28/%E5%BB%BA%E7%AB%99/hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E4%B8%AA%E4%BA%BA%E6%9C%8D%E5%8A%A1%E5%99%A8/finish.png" alt="OK"></p>
<h2 id="博客完善"><a href="#博客完善" class="headerlink" title="博客完善"></a>博客完善</h2><p>hexo美化</p>
<p>博主箴言</p>
<ul>
<li>博客美化是个无底洞，很容易寻求新欢，自己满意就好了</li>
<li>博客有内容才是王道，真正利用起来博客的价值</li>
</ul>
]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>建站</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
